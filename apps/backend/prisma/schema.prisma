generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_TEMP")
}

model AdminUser {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  role      String   @default("ADMIN")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model User {
  id            Int      @id @default(autoincrement())
  email         String?  @unique
  twitterHandle String?  @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now())
  username      String?  @unique
  avatarUrl     String?
  platform      String   @default("twitter")
}

model Narrative {
  id           String  @id @default(cuid())
  narrativeId  String  @unique
  name         String
  slug         String
  description  String?
  projectCount Int

  // Activity
  totalViews Float
  totalPosts Int

  // Market Cap
  totalMarketCapUsd  Float
  marketCapChange24h Float
  marketCapChange7d  Float
  marketCapChange30d Float
  marketCapChange90d Float

  // Mindshare
  mindsharePercent   Float
  mindshareChange24h Float
  mindshareChange7d  Float
  mindshareChange30d Float
  mindshareChange90d Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  fetchedAt DateTime @default(now())

  projectLinks ProjectToNarrative[]

  narrativeSnapshot NarrativeSnapshot[]
  projectSnapshot   ProjectSnapshot[]

  @@index([id])
  @@index([narrativeId])
  @@index([name])
}

model NarrativeSnapshot {
  id           String @id @default(cuid())
  narrativeId  String
  projectCount Int

  // Activity
  totalViews Float
  totalPosts Int

  // Market Cap
  totalMarketCapUsd  Float
  marketCapChange24h Float
  marketCapChange7d  Float
  marketCapChange30d Float
  marketCapChange90d Float

  // Mindshare
  mindsharePercent   Float
  mindshareChange24h Float
  mindshareChange7d  Float
  mindshareChange30d Float
  mindshareChange90d Float

  source    String // например: "Protokols", "Manual"
  updatedBy String // например: "cron", "adminUserId", "system"

  createdAt DateTime @default(now())

  narrative Narrative @relation(fields: [narrativeId], references: [narrativeId])

  @@index([narrativeId])
  @@index([createdAt])
}

model ProjectToNarrative {
  id          String @id @default(uuid())
  narrativeId String
  projectId   String

  // Activity
  totalViews Int
  totalPosts Int

  // Mindshare
  mindsharePercent   Float
  mindshareChange24h Float
  mindshareChange7d  Float
  mindshareChange30d Float
  mindshareChange90d Float

  narrative Narrative @relation(fields: [narrativeId], references: [id])
  project   Project   @relation(fields: [projectId], references: [id])
  createdAt DateTime  @default(now())

  @@unique([narrativeId, projectId])
  @@index([narrativeId])
  @@index([projectId])
}

model Project {
  id    String  @id @default(uuid())
  stage String?

  featured Boolean @default(false)
  hidden   Boolean @default(false)

  // Mindshare (global mindshare calculate from narrative mindshare)
  mindshare Float

  // Twitter profile
  twitterId              String
  twitterUsername        String
  twitterDisplayName     String
  twitterAvatarUrl       String
  twitterDescription     String
  twitterDescriptionLink String?
  twitterFollowersCount  Int
  twitterFollowingCount  Int
  twitterIsVerified      Boolean
  twitterGoldBadge       Boolean?
  twitterLang            String
  twitterCreatedAt       DateTime

  // Coin data
  coinSymbol          String
  coinMarketCap       Float
  coinPrice           Float
  coinContractAddress String?
  coinName            String
  coinImageUrl        String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  fetchedAt DateTime @default(now())

  projectSnapshot ProjectSnapshot[]
  narrativeLinks  ProjectToNarrative[]
  rewardPools     RewardPool[]
  kols            KolToProject[]

  @@unique([twitterId])
  @@index([twitterUsername])
  @@index([coinMarketCap])
  @@index([createdAt])
  @@index([twitterFollowersCount])
  @@index([coinPrice])
}

model ProjectSnapshot {
  id String @id @default(cuid())

  // Activity
  totalViews Int
  totalPosts Int

  // Mindshare
  mindsharePercent   Float
  mindshareChange24h Float
  mindshareChange7d  Float
  mindshareChange30d Float
  mindshareChange90d Float

  // Meta
  source    String // например: "Protokols"
  updatedBy String // например: "cron", "adminUserId", "system"
  createdAt DateTime @default(now())

  project   Project @relation(fields: [projectId], references: [id])
  projectId String

  narrative   Narrative? @relation(fields: [narrativeId], references: [id])
  narrativeId String?

  @@index([projectId])
  @@index([createdAt])
}

model Kol {
  id                    String         @id @default(cuid())
  name                  String
  username              String         @unique
  badges                String?
  bio                   String?
  avatarUrl             String?
  platform              String?
  businessAccount       Boolean        @default(false)
  followings            String
  expertise             String?
  profileUrl            String?
  mindshare             String?
  mindsharePercent      Float          @default(0)
  smartFollowersPercent Float          @default(0)
  pow                   String?
  poi                   String?
  poe                   String?
  followersCount        String
  moneyScore            String?
  createdAt             DateTime       @default(now())
  updatedAt             DateTime       @default(now())
  bannerUrl             String?
  tweetsCount           String
  verified              Boolean        @default(false)
  twitterScoutJsonRaw   Json?
  followersCountNumeric Int?           @default(0)
  followingsNumeric     Int?           @default(0)
  tweetsCountNumeric    Int?           @default(0)
  avgLikes              Int?
  avgViews              Int?
  engagementRate        Float?
  kolScore              Int?           @default(0)
  protokolsJsonRaw      Json?
  totalPosts            Int?
  smartFollowers        Int?
  totalComments         Int?
  totalLikes            Int?
  totalReplies          Int?
  totalRetweets         Int?
  totalViews            Int?
  twitterRegisterDate   String?
  projects              KolToProject[]

  @@index([followersCountNumeric])
  @@index([tweetsCountNumeric])
  @@index([username])
  @@index([createdAt])
}

model RewardPool {
  id                  String           @id @default(cuid())
  title               String
  description         String
  reward              String
  rewardRate          Float?
  rewardUnit          String?
  deadline            DateTime
  platforms           String[]
  status              RewardPoolStatus
  totalAmountUsd      Float
  paidOutUsd          Float
  campaignTargetViews Int
  participantsCount   Int
  completedCount      Int
  requirements        String[]
  project             Project          @relation(fields: [projectId], references: [id])
  projectId           String
}

enum RewardPoolStatus {
  active
  upcoming
  closed
}

model KolToProject {
  id        String  @id @default(cuid())
  kolId     String
  projectId String
  kol       Kol     @relation(fields: [kolId], references: [id])
  project   Project @relation(fields: [projectId], references: [id])
}

model Log {
  id        String   @id @default(cuid())
  level     String // 'SUCCESS' | 'ERROR' | 'RETRY' | 'FATAL' | etc
  message   String
  url       String?
  timestamp DateTime @default(now())
}
