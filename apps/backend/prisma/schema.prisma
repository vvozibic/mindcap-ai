generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_TEMP")
}

model AdminUser {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  role      String   @default("ADMIN")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model User {
  id            Int      @id @default(autoincrement())
  email         String?  @unique
  twitterHandle String?  @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now())
  username      String?  @unique
  avatarUrl     String?
  platform      String   @default("twitter")
}

model Narrative {
  id           String  @id @default(cuid())
  narrativeId  String  @unique
  name         String
  slug         String
  description  String?
  projectCount Int

  totalViews Float
  totalPosts Int

  marketCapUsd       Float
  marketCapChange24h Float
  marketCapChange7d  Float
  marketCapChange30d Float
  marketCapChange90d Float

  mindsharePercent   Float
  mindshareChange24h Float
  mindshareChange7d  Float
  mindshareChange30d Float
  mindshareChange90d Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  fetchedAt DateTime @default(now())

  projectLinks      NarrativeToProject[]
  narrativeSnapshot NarrativeSnapshot[]

  @@index([id])
  @@index([narrativeId])
  @@index([name])
}

model NarrativeSnapshot {
  id           String @id @default(cuid())
  narrativeId  String
  projectCount Int

  totalViews Float
  totalPosts Int

  marketCapUsd       Float
  marketCapChange24h Float
  marketCapChange7d  Float
  marketCapChange30d Float
  marketCapChange90d Float

  mindsharePercent   Float
  mindshareChange24h Float
  mindshareChange7d  Float
  mindshareChange30d Float
  mindshareChange90d Float

  source    String // например: "Protokols", "Manual"
  updatedBy String // например: "cron", "adminUserId", "system"

  createdAt DateTime @default(now())

  narrative Narrative @relation(fields: [narrativeId], references: [id])

  @@index([narrativeId])
  @@index([createdAt])
}

model NarrativeToProject {
  id                      String    @id @default(uuid())
  narrativeId             String
  projectId               String
  projectMindsharePercent Float     @default(0)
  narrative               Narrative @relation(fields: [narrativeId], references: [id])
  project                 Project   @relation(fields: [projectId], references: [id])
  createdAt               DateTime  @default(now())

  @@unique([narrativeId, projectId])
  @@index([narrativeId])
  @@index([projectId])
}

model Kol {
  id                    String         @id @default(cuid())
  name                  String
  username              String         @unique
  badges                String?
  bio                   String?
  avatarUrl             String?
  platform              String?
  businessAccount       Boolean        @default(false)
  followings            String
  expertise             String?
  profileUrl            String?
  mindshare             String?
  mindsharePercent      Float          @default(0)
  smartFollowersPercent Float          @default(0)
  pow                   String?
  poi                   String?
  poe                   String?
  followersCount        String
  moneyScore            String?
  createdAt             DateTime       @default(now())
  updatedAt             DateTime       @default(now())
  bannerUrl             String?
  tweetsCount           String
  verified              Boolean        @default(false)
  twitterScoutJsonRaw   Json?
  followersCountNumeric Int?           @default(0)
  followingsNumeric     Int?           @default(0)
  tweetsCountNumeric    Int?           @default(0)
  avgLikes              Int?
  avgViews              Int?
  engagementRate        Float?
  kolScore              Int?           @default(0)
  protokolsJsonRaw      Json?
  totalPosts            Int?
  smartFollowers        Int?
  totalComments         Int?
  totalLikes            Int?
  totalReplies          Int?
  totalRetweets         Int?
  totalViews            Int?
  twitterRegisterDate   String?
  projects              KolToProject[]

  @@index([followersCountNumeric])
  @@index([tweetsCountNumeric])
  @@index([username])
  @@index([createdAt])
}

model Project {
  id                 String               @id @default(uuid())
  name               String
  symbol             String
  slug               String?
  avatarUrl          String?
  bannerUrl          String?
  description        String?
  twitterUsername    String
  twitterId          String?
  isVerified         Boolean?
  stage              String?
  followersCount     Int?
  followingCount     Int?
  twitterCreatedAt   DateTime?
  coingeckoImageUrl  String?
  marketCap          Float?
  price              Float?
  contractAddress    String?
  featured           Boolean              @default(false)
  hidden             Boolean              @default(false)
  totalViews         Int?
  totalPosts         Int?
  mindsharePercent   Float?
  mindshareChange24h Float?
  mindshareChange7d  Float?
  mindshareChange30d Float?
  mindshareChange90d Float?
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  narrativeLinks     NarrativeToProject[]
  rewardPools        RewardPool[]
  influencers        KolToProject[]

  @@unique([twitterId])
  @@index([slug])
  @@index([twitterUsername])
  @@index([mindsharePercent])
  @@index([marketCap])
  @@index([createdAt])
  @@index([followersCount])
  @@index([totalViews])
  @@index([price])
  @@index([featured, mindsharePercent])
}

model RewardPool {
  id                  String           @id @default(cuid())
  title               String
  description         String
  reward              String
  rewardRate          Float?
  rewardUnit          String?
  deadline            DateTime
  platforms           String[]
  status              RewardPoolStatus
  totalAmountUsd      Float
  paidOutUsd          Float
  campaignTargetViews Int
  participantsCount   Int
  completedCount      Int
  requirements        String[]
  project             Project          @relation(fields: [projectId], references: [id])
  projectId           String
}

enum RewardPoolStatus {
  active
  upcoming
  closed
}

model KolToProject {
  id        String @id @default(cuid())
  kolId     String
  projectId String

  kol     Kol     @relation(fields: [kolId], references: [id])
  project Project @relation(fields: [projectId], references: [id])

  @@unique([kolId, projectId])
  @@index([projectId])
  @@index([kolId])
}

model PageVisit {
  id        String   @id @default(cuid())
  path      String
  ip        String
  userAgent String?
  createdAt DateTime @default(now())

  @@index([path])
  @@index([createdAt])
}
